{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { Home } from \"./screens/\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    border: \"transparent\"\n  })\n});\nvar Stack = createStackNavigator();\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: 'Home',\n      children: _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","createStackNavigator","NavigationContainer","DefaultTheme","Home","theme","colors","border","Stack","App","headerShown"],"sources":["D:/SLIIT/3rd_year/Projects/FirstProject/App.js"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\n\nimport { Home } from \"./screens/\";\n\nconst theme = {\n    ...DefaultTheme,\n    colors: {\n        ...DefaultTheme.colors,\n        border: \"transparent\",\n    },\n};\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n    return (\n        <NavigationContainer theme={theme}>\n            <Stack.Navigator\n                screenOptions={{\n                    headerShown: false\n                }}\n                initialRouteName={'Home'}\n            >\n                <Stack.Screen name=\"Home\" component={Home} />\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n};\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,0BAA0B;AAE5E,SAASC,IAAI;AAAqB;AAElC,IAAMC,KAAK,mCACJF,YAAY;EACfG,MAAM,kCACCH,YAAY,CAACG,MAAM;IACtBC,MAAM,EAAE;EAAa;AACxB,EACJ;AAED,IAAMC,KAAK,GAAGP,oBAAoB,EAAE;AAEpC,IAAMQ,GAAG,GAAG,SAANA,GAAG,GAAS;EACd,OACI,KAAC,mBAAmB;IAAC,KAAK,EAAEJ,KAAM;IAAA,UAC9B,KAAC,KAAK,CAAC,SAAS;MACZ,aAAa,EAAE;QACXK,WAAW,EAAE;MACjB,CAAE;MACF,gBAAgB,EAAE,MAAO;MAAA,UAEzB,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAEN;MAAK;IAAG;EAC/B,EACA;AAE9B,CAAC;AAED,eAAeK,GAAG"},"metadata":{},"sourceType":"module"}